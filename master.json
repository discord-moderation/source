{"meta":{"generator":"0.11.1","format":22,"date":1640802411956},"custom":{"general":{"name":"General","files":{"README":{"name":"Welcome","type":"md","content":"<img src=\"https://raw.githubusercontent.com/discord-moderation/source/main/assets/discord-moderation-main.png\" />\r\n<hr>\r\n\r\n## Welcome!\r\n<strong>Welcome, this is 'discord-moderation' module!</strong> <br />\r\n<strong>discord-moderation will simplify creating Moderation System for Your Discord Bot!</strong>\r\n\r\n## Features\r\n<span><strong>[üîë] Built in TypeScript</strong></span> <br />\r\n<span><strong>[‚öô] 100% Promise-based</strong></span> <br />\r\n<span><strong>[üôÇ] TypeScript Support</strong></span> <br />\r\n<span><strong>[üëç] Discord.JS v13</strong></span>\r\n\r\n## Requirements\r\n<span><strong>[1] [NodeJS v16 or Above](https://nodejs.org/)</strong></span> <br />\r\n<span><strong>[2] [Discord.JS v13](https://npmjs.com/package/discord.js/)</strong></span> <br />\r\n\r\n## Quick Example\r\n```js\r\nconst { Client, Intents } = require('discord.js');\r\nconst { Moderation } = require('discord-moderation');\r\n\r\nconst client = new Client({\r\n  intents: ['GUILDS', 'GUILD_MESSAGES', 'GUILD_PRESENCES', 'GUILD_MEMBERS', 'GUILD_BANS']\r\n});\r\n\r\nconst moderation = new Moderation(client, {\r\n  dbPath: './db/',\r\n  locale: \"en-US\",\r\n  systems: {\r\n    autoRole: false,\r\n    antiSpam: false,\r\n    antiInvite: false,\r\n    antiJoin: false,\r\n    antiLink: false,\r\n    blacklist: false,\r\n    ghostPing: false,\r\n    logSystem: false,\r\n  },\r\n});\r\n```\r\n\r\n## This module uses\r\n<span><strong>[1] [Discord.JS v13](https://npmjs.com/package/discord.js/)</strong></span> <br />\r\n<span><strong>[2] [colors](https://npmjs.com/package/colors/)</strong></span> <br />\r\n<span><strong>[3] [ms](https://npmjs.com/package/ms/)</strong></span> <br />\r\n<span><strong>[4] [node-fetch](https://npmjs.com/package/node-fetch/)</strong></span> <br />\r\n<span><strong>[5] [enmap (database)](https://npmjs.com/package/enmap/)</strong></span> <br />\r\n\r\n## Links\r\n<span><strong>[1] [Documentation](https://discord-moderation.js.org/)</strong></span> <br />\r\n<span><strong>[2] [Module Author](https://npmjs.com/~badboy-discord/)</strong></span> <br />\r\n<span><strong>[3] [Support Server](https://discord.gg/eGZfaWsZgR/)</strong></span>","path":"docs/general/README.md"}}}},"classes":[{"name":"AntiSpam","description":"Anti-Spam System","construct":{"name":"AntiSpam","params":[{"name":"client","description":"Discord.JS Client","type":[[["Client"]]]},{"name":"options","description":"Module Options","type":[[["Options"]]]}]},"props":[{"name":"client","description":"Discord Client","type":[[["Client"]]],"meta":{"line":39,"file":"AntiSpam.ts","path":"src/classes"}},{"name":"options","description":"Module Options","type":[[["Options"]]],"meta":{"line":45,"file":"AntiSpam.ts","path":"src/classes"}},{"name":"mutes","description":"Mute Manager","type":[[["MuteManager"]]],"meta":{"line":51,"file":"AntiSpam.ts","path":"src/classes"}},{"name":"utils","description":"Module Utils","type":[[["Utils"]]],"meta":{"line":57,"file":"AntiSpam.ts","path":"src/classes"}},{"name":"logger","description":"Module Logger","type":[[["Logger"]]],"meta":{"line":63,"file":"AntiSpam.ts","path":"src/classes"}},{"name":"usersMap","description":"Users Map","type":[[["Map","<"],["string",", "],["userMap",">"]]],"meta":{"line":69,"file":"AntiSpam.ts","path":"src/classes"}}],"methods":[{"name":"handle","description":"Method that handles Anti-Spam System.","params":[{"name":"message","description":"Discord Message","type":[[["Message"]]]}],"returns":[[["Promise","<"],["boolean",">"]]],"meta":{"line":76,"file":"AntiSpam.ts","path":"src/classes"}}],"meta":{"line":24,"file":"AntiSpam.ts","path":"src/classes"}},{"name":"AutoRole","description":"Auto-Role System","construct":{"name":"AutoRole","params":[{"name":"client","description":"Discord.JS Client","type":[[["Client"]]]},{"name":"options","description":"Module Options","type":[[["Options"]]]}]},"props":[{"name":"client","description":"Discord Client","type":[[["Client"]]],"meta":{"line":29,"file":"AutoRole.ts","path":"src/classes"}},{"name":"options","description":"Module Options","type":[[["Options"]]],"meta":{"line":35,"file":"AutoRole.ts","path":"src/classes"}},{"name":"utils","description":"Module Utils","type":[[["Utils"]]],"meta":{"line":41,"file":"AutoRole.ts","path":"src/classes"}},{"name":"logger","description":"Module Logger","type":[[["Logger"]]],"meta":{"line":47,"file":"AutoRole.ts","path":"src/classes"}}],"methods":[{"name":"get","description":"Method that gets Guild Auto-Role","params":[{"name":"guild","description":"Discord Guild","type":[[["Guild"]]]}],"returns":[[["Promise","<"],["Role","|"],["null",">"]]],"meta":{"line":54,"file":"AutoRole.ts","path":"src/classes"}},{"name":"set","description":"Method that sets Guild Auto-Role","params":[{"name":"guild","description":"Discord Guild","type":[[["Guild"]]]},{"name":"role","description":"Discord Role","type":[[["Role"]]]}],"returns":[[["Promise","<"],["boolean",">"]]],"meta":{"line":75,"file":"AutoRole.ts","path":"src/classes"}},{"name":"delete","description":"Method that removes Guild Auto-Role","params":[{"name":"guild","description":"Discord Guild","type":[[["Guild"]]]}],"returns":[[["Promise","<"],["boolean",">"]]],"meta":{"line":97,"file":"AutoRole.ts","path":"src/classes"}}],"meta":{"line":14,"file":"AutoRole.ts","path":"src/classes"}},{"name":"Base","description":"Base class that uses in all other classes.","access":"private","methods":[{"name":"on","description":"Handles all the Events","params":[{"name":"event","description":"Event Name","type":[[["String"]]]},{"name":"fn","description":"Callback","type":[[["function"]]]}],"returns":[[["Base"]]],"meta":{"line":15,"file":"Base.ts","path":"src/classes"}},{"name":"once","description":"Handles all the Events","params":[{"name":"event","description":"Event Name","type":[[["String"]]]},{"name":"fn","description":"Callback","type":[[["function"]]]}],"returns":[[["EventEmitter"]]],"meta":{"line":30,"file":"Base.ts","path":"src/classes"}},{"name":"emit","description":"Emits any Event","params":[{"name":"event","description":"Event Name","type":[[["String"]]]},{"name":"fn","description":"Callback","type":[[["function"]]]}],"returns":[[["boolean"]]],"meta":{"line":45,"file":"Base.ts","path":"src/classes"}}],"meta":{"line":6,"file":"Base.ts","path":"src/classes"}},{"name":"DBManager","description":"Class that controls Database","construct":{"name":"DBManager","params":[{"name":"client","description":"Discord.JS Client","type":[[["Client"]]]},{"name":"options","description":"Module Options","type":[[["Options"]]]}]},"props":[{"name":"client","description":"Discord Client","type":[[["Client"]]],"meta":{"line":28,"file":"DBManager.ts","path":"src/classes"}},{"name":"options","description":"Module Options","type":[[["Options"]]],"meta":{"line":34,"file":"DBManager.ts","path":"src/classes"}},{"name":"logger","description":"Module Logger","type":[[["Logger"]]],"meta":{"line":40,"file":"DBManager.ts","path":"src/classes"}},{"name":"database","description":"Database","type":[[["Enmap"]]],"meta":{"line":46,"file":"DBManager.ts","path":"src/classes"}}],"methods":[{"name":"set","description":"Method that Changes Something from Database","params":[{"name":"id","description":"Discord Guild ID","type":[[["id"]]]},{"name":"value","description":"Value to Set","type":[[["any"]]]}],"returns":[[["boolean"]]],"meta":{"line":57,"file":"DBManager.ts","path":"src/classes"}},{"name":"setProp","description":"Method that Changes Property Value from Database","params":[{"name":"id","description":"Discord Guild ID","type":[[["id"]]]},{"name":"key","description":"Property Name","type":[[["string"]]]},{"name":"value","description":"Value to Set","type":[[["any"]]]}],"returns":[[["boolean"]]],"meta":{"line":71,"file":"DBManager.ts","path":"src/classes"}},{"name":"push","description":"Method that Pushing Data to Something from Database","params":[{"name":"id","description":"Discord Guild ID","type":[[["id"]]]},{"name":"data","description":"Data to Push","type":[[["any"]]]}],"returns":[[["boolean"]]],"meta":{"line":89,"file":"DBManager.ts","path":"src/classes"}},{"name":"get","description":"Method that Returns Value from Specified Key in Database","params":[{"name":"id","description":"Discord Guild ID","type":[[["id"]]]},{"name":"key","description":"Key to Get","type":[[["any"]]]}],"returns":[[["any"]]],"meta":{"line":103,"file":"DBManager.ts","path":"src/classes"}},{"name":"fetch","description":"Method that Returns Data from Database","params":[{"name":"id","description":"Discord Guild ID","type":[[["id"]]]}],"returns":[[["object"]]],"meta":{"line":118,"file":"DBManager.ts","path":"src/classes"}},{"name":"remove","description":"Method that Removes Object from Array in Database","params":[{"name":"id","description":"Discord Guild ID","type":[[["id"]]]},{"name":"key","description":"Name of Array in Database","type":[[["string"]]]},{"name":"second","description":"Property for Filter","type":[[["string"]]]},{"name":"value","description":"Value for Filter","type":[[["string"]]]}],"returns":[[["any"]],[["boolean"]]],"meta":{"line":130,"file":"DBManager.ts","path":"src/classes"}}],"meta":{"line":14,"file":"DBManager.ts","path":"src/classes"}},{"name":"ImmunityUsers","description":"Immunity Users Class","props":[{"name":"client","description":"Discord Client","type":[[["Client"]]],"meta":{"line":22,"file":"ImmunityUsers.ts","path":"src/classes"}},{"name":"options","description":"Module Options","type":[[["Options"]]],"meta":{"line":28,"file":"ImmunityUsers.ts","path":"src/classes"}},{"name":"utils","description":"Module Utils","type":[[["Utils"]]],"meta":{"line":34,"file":"ImmunityUsers.ts","path":"src/classes"}},{"name":"logger","description":"Module Logger","type":[[["Logger"]]],"meta":{"line":40,"file":"ImmunityUsers.ts","path":"src/classes"}}],"methods":[{"name":"add","description":"Method that adds Member to Immunity List.","params":[{"name":"member","description":"Discord Member","type":[[["GuildMember"]]]}],"returns":[[["Promise","<"],["boolean",">"]]],"meta":{"line":47,"file":"ImmunityUsers.ts","path":"src/classes"}},{"name":"delete","description":"Method that removes Member to Immunity List.","params":[{"name":"member","description":"Discord Member","type":[[["GuildMember"]]]}],"returns":[[["Promise","<"],["boolean",">"]]],"meta":{"line":78,"file":"ImmunityUsers.ts","path":"src/classes"}},{"name":"getAll","description":"Method that returns an Array of Immunity Users.","params":[{"name":"guild","description":"Discord Guild","type":[[["Guild"]]]}],"returns":[[["Promise","<"],["Array","<"],["ImmunityUsersData",">>"]]],"meta":{"line":104,"file":"ImmunityUsers.ts","path":"src/classes"}}],"meta":{"line":14,"file":"ImmunityUsers.ts","path":"src/classes"}},{"name":"Logger","description":"Logger Class","methods":[{"name":"log","description":"Logging Something","params":[{"name":"message","description":"Message to Log","type":[[["String"]]]}],"returns":[[["void"]]],"meta":{"line":32,"file":"Logger.ts","path":"src/classes"}},{"name":"warn","description":"Logging Something","params":[{"name":"message","description":"Message to Log","type":[[["String"]]]}],"returns":[[["void"]]],"meta":{"line":32,"file":"Logger.ts","path":"src/classes"}},{"name":"error","description":"Logging Something","params":[{"name":"message","description":"Message to Log","type":[[["String"]]]}],"returns":[[["void"]]],"meta":{"line":32,"file":"Logger.ts","path":"src/classes"}}],"meta":{"line":3,"file":"Logger.ts","path":"src/classes"}},{"name":"Moderation","description":"Class that enables Moderation System","extends":[[["Base"]]],"construct":{"name":"Moderation","params":[{"name":"client","description":"Discord.JS Client","type":[[["Client"]]]},{"name":"options","description":"Module Options","type":[[["Options"]]]}]},"props":[{"name":"client","description":"Discord Client","type":[[["Client"]]],"meta":{"line":50,"file":"Moderation.ts","path":"src/classes"}},{"name":"options","description":"Module Options","type":[[["Options"]]],"meta":{"line":56,"file":"Moderation.ts","path":"src/classes"}},{"name":"mutes","description":"MuteManager Class","type":[[["MuteManager"]]],"meta":{"line":62,"file":"Moderation.ts","path":"src/classes"}},{"name":"warns","description":"WarnManager Class","type":[[["WarnManager"]]],"meta":{"line":68,"file":"Moderation.ts","path":"src/classes"}},{"name":"utils","description":"Module Utils","type":[[["Utils"]]],"meta":{"line":74,"file":"Moderation.ts","path":"src/classes"}},{"name":"autoRole","description":"Auto-Role System","type":[[["AutoRole"]]],"meta":{"line":80,"file":"Moderation.ts","path":"src/classes"}},{"name":"antiSpam","description":"Anti-Spam System","type":[[["AntiSpam"]]],"meta":{"line":86,"file":"Moderation.ts","path":"src/classes"}},{"name":"systems","description":"Module Systems","type":[[["Systems"]]],"meta":{"line":92,"file":"Moderation.ts","path":"src/classes"}},{"name":"isReady","description":"Module Ready State","type":[[["boolean"]]],"meta":{"line":98,"file":"Moderation.ts","path":"src/classes"}}],"methods":[{"name":"mute","description":"Method that Mutes or Temp Mutes Member","emits":["Moderation#event:muteMember"],"params":[{"name":"type","description":"Type of the Mute","type":[[["string"]]]},{"name":"message","description":"Message or Interaction","type":[[["Message"]],[["Interaction"]]]},{"name":"member","description":"Member to Mute","type":[[["GuildMember"]]]},{"name":"reason","description":"Reason of the Mute","type":[[["string"]]]},{"name":"time","description":"Time of the Temp Mute","type":[[["number"]]]}],"returns":[[["Promise","<"],["MutesData",">"]]],"meta":{"line":113,"file":"Moderation.ts","path":"src/classes"}},{"name":"unmute","description":"Method that unmutes Member","emits":["Moderation#event:unmuteMember"],"params":[{"name":"member","description":"Member for Mute","type":[[["GuildMember"]]]}],"returns":[[["Promise","<"],["MutesData",">"]]],"meta":{"line":152,"file":"Moderation.ts","path":"src/classes"}},{"name":"warn","description":"Method that warns Member","emits":["Moderation#event:warnAdd","Moderation#event:warnKick"],"params":[{"name":"message","description":"Message or Interaction","type":[[["Message"]],[["Interaction"]]]},{"name":"member","description":"Member for Warn","type":[[["GuildMember"]]]},{"name":"reason","description":"Reaon of the Warn","type":[[["string"]]]}],"returns":[[["Promise","<"],["WarnsData",">"]]],"meta":{"line":174,"file":"Moderation.ts","path":"src/classes"}},{"name":"unwarn","description":"Method that removes last warn from Member","emits":["Moderation#event:warnRemove"],"params":[{"name":"member","description":"Member for Warn","type":[[["GuildMember"]]]}],"returns":[[["Promise","<"],["WarnsData",">"]]],"meta":{"line":211,"file":"Moderation.ts","path":"src/classes"}},{"name":"allWarns","description":"Method that removes last warn from Member","params":[{"name":"member","description":"Member for Warn","type":[[["GuildMember"]]]}],"returns":[[["Promise","<"],["Array","<"],["WarnsData",">|"],["null",">"]]],"meta":{"line":233,"file":"Moderation.ts","path":"src/classes"}},{"name":"checkMute","description":"Method that will be used when Member joins Server","access":"private","params":[{"name":"member","description":"Discord Member","type":[[["GuildMember"]]]}],"returns":[[["Promise","<"],["boolean",">"]]],"meta":{"line":256,"file":"Moderation.ts","path":"src/classes"}},{"name":"on","description":"Handles all the Events","inherits":"Base#on","inherited":true,"params":[{"name":"event","description":"Event Name","type":[[["String"]]]},{"name":"fn","description":"Callback","type":[[["function"]]]}],"returns":[[["Base"]]],"meta":{"line":15,"file":"Base.ts","path":"src/classes"}},{"name":"once","description":"Handles all the Events","inherits":"Base#once","inherited":true,"params":[{"name":"event","description":"Event Name","type":[[["String"]]]},{"name":"fn","description":"Callback","type":[[["function"]]]}],"returns":[[["EventEmitter"]]],"meta":{"line":30,"file":"Base.ts","path":"src/classes"}},{"name":"emit","description":"Emits any Event","inherits":"Base#emit","inherited":true,"params":[{"name":"event","description":"Event Name","type":[[["String"]]]},{"name":"fn","description":"Callback","type":[[["function"]]]}],"returns":[[["boolean"]]],"meta":{"line":45,"file":"Base.ts","path":"src/classes"}}],"events":[{"name":"muteMember","params":[{"name":"id","description":"ID of the Mute","type":[[["number"]]]},{"name":"type","description":"Type of the Mute","type":[[["string"]]]},{"name":"guildID","description":"ID of the Guild","type":[[["string"]]]},{"name":"memberID","description":"ID of the Muted Member","type":[[["string"]]]},{"name":"moderatorID","description":"ID of the Moderator","type":[[["string"]]]},{"name":"channelID","description":"ID of the Channel","type":[[["string"]]]},{"name":"reason","description":"Reason of the Mute","type":[[["string"]]]},{"name":"time","description":"Time of the Mute","optional":true,"type":[[["number"]]]},{"name":"unmutedAt","description":"Unmuting Date","optional":true,"type":[[["number"]]]}],"meta":{"line":283,"file":"Moderation.ts","path":"src/classes"}},{"name":"unmuteMember","params":[{"name":"id","description":"ID of the Mute","type":[[["number"]]]},{"name":"type","description":"Type of the Mute","type":[[["string"]]]},{"name":"guildID","description":"ID of the Guild","type":[[["string"]]]},{"name":"memberID","description":"ID of the Muted Member","type":[[["string"]]]},{"name":"moderatorID","description":"ID of the Moderator","type":[[["string"]]]},{"name":"channelID","description":"ID of the Channel","type":[[["string"]]]},{"name":"reason","description":"Reason of the Mute","type":[[["string"]]]},{"name":"time","description":"Time of the Mute","optional":true,"type":[[["number"]]]},{"name":"unmutedAt","description":"Unmuting Date","optional":true,"type":[[["number"]]]}],"meta":{"line":298,"file":"Moderation.ts","path":"src/classes"}},{"name":"warnAdd","params":[{"name":"id","description":"ID of the Warn","type":[[["number"]]]},{"name":"guildID","description":"ID of the Guild","type":[[["string"]]]},{"name":"memberID","description":"ID of the Warned Member","type":[[["string"]]]},{"name":"moderatorID","description":"ID of the Moderator","type":[[["string"]]]},{"name":"channelID","description":"ID of the Channel","type":[[["string"]]]},{"name":"reason","description":"Reason of the Mute","type":[[["string"]]]}],"meta":{"line":313,"file":"Moderation.ts","path":"src/classes"}},{"name":"warnRemove","params":[{"name":"id","description":"ID of the Warn","type":[[["number"]]]},{"name":"guildID","description":"ID of the Guild","type":[[["string"]]]},{"name":"memberID","description":"ID of the Warned Member","type":[[["string"]]]},{"name":"moderatorID","description":"ID of the Moderator","type":[[["string"]]]},{"name":"channelID","description":"ID of the Channel","type":[[["string"]]]},{"name":"reason","description":"Reason of the Mute","type":[[["string"]]]}],"meta":{"line":325,"file":"Moderation.ts","path":"src/classes"}},{"name":"warnKick","params":[{"name":"guildID","description":"ID of the Guild","type":[[["string"]]]},{"name":"memberID","description":"ID of the Warned Member","type":[[["string"]]]},{"name":"moderatorID","description":"ID of the Moderator","type":[[["string"]]]},{"name":"channelID","description":"ID of the Channel","type":[[["string"]]]},{"name":"reason","description":"Reason of the Mute","type":[[["string"]]]}],"meta":{"line":337,"file":"Moderation.ts","path":"src/classes"}}],"meta":{"line":33,"file":"Moderation.ts","path":"src/classes"}},{"name":"MuteManager","description":"Class that Handles/Creates/Removes Mutes","extends":[[["Base"]]],"construct":{"name":"MuteManager","params":[{"name":"client","description":"Discord.JS Client","type":[[["Client"]]]},{"name":"options","description":"Module Options","type":[[["Options"]]]}]},"props":[{"name":"client","description":"Discord Client","type":[[["Client"]]],"meta":{"line":38,"file":"MuteManager.ts","path":"src/classes"}},{"name":"options","description":"Module Options","type":[[["Options"]]],"meta":{"line":44,"file":"MuteManager.ts","path":"src/classes"}},{"name":"logger","description":"Module Logger","type":[[["Logger"]]],"meta":{"line":50,"file":"MuteManager.ts","path":"src/classes"}},{"name":"utils","description":"Module Utils","type":[[["Utils"]]],"meta":{"line":56,"file":"MuteManager.ts","path":"src/classes"}}],"methods":[{"name":"setRole","description":"This method sets Mute Role.","params":[{"name":"guild","description":"Discord Guild","type":[[["Guild"]]]},{"name":"role","description":"Discord Role","type":[[["Role"]]]}],"returns":[[["Promise","<"],["boolean",">"]]],"meta":{"line":63,"file":"MuteManager.ts","path":"src/classes"}},{"name":"getRole","description":"This method getting Mute Role.","params":[{"name":"guild","description":"Discord Guild","type":[[["Guild"]]]}],"returns":[[["Promise","<"],["boolean",">"]]],"meta":{"line":82,"file":"MuteManager.ts","path":"src/classes"}},{"name":"getMute","description":"Method that finds Mute in Storage","params":[{"name":"member","description":"Discord Member","type":[[["GuildMember"]]]}],"returns":[[["Promise","<"],["MutesData",">"]]],"meta":{"line":103,"file":"MuteManager.ts","path":"src/classes"}},{"name":"create","description":"This is method that mutes member.","params":[{"name":"type","description":"Mute Type","type":[[["string"]]]},{"name":"message","description":"Message or Interaction","type":[[["Message"]],[["Interaction"]]]},{"name":"member","description":"Discord Guild Member","type":[[["GuildMember"]]]},{"name":"reason","description":"Reason of the Mute","type":[[["string"]]]},{"name":"time","description":"Time of Temp Mute","type":[[["number"]]]}],"returns":[[["Promise","<"],["MutesData",">"]]],"meta":{"line":124,"file":"MuteManager.ts","path":"src/classes"}},{"name":"delete","description":"Method that removes Mute from Member","emits":["Moderation#event:unmuteMember"],"params":[{"name":"member","description":"Discord Member","type":[[["GuildMember"]]]}],"returns":[[["Promise","<"],["MutesData",">"]]],"meta":{"line":206,"file":"MuteManager.ts","path":"src/classes"}},{"name":"handleUtilsMute","description":"Private method that will handle Mute","emits":["Moderation#event:muteMember"],"params":[{"name":"guild","description":"Discord Guild","type":[[["Guild"]]]},{"name":"member","description":"Guild Member","type":[[["GuildMember"]]]},{"name":"time","description":"Time of the Mute","type":[[["number"]]]},{"name":"muteData","description":"Mute Data","type":[[["MutesData"]]]}],"returns":[[["Promise","<"],["null","|"],["boolean",">"]]],"meta":{"line":254,"file":"MuteManager.ts","path":"src/classes"}},{"name":"handleMute","description":"Private method that will handle Mute","emits":["Moderation#event:unmuteMember"],"params":[{"name":"guild","description":"Discord Guild","type":[[["Guild"]]]},{"name":"member","description":"Guild Member","type":[[["GuildMember"]]]},{"name":"time","description":"Time of the Mute","type":[[["number"]]]},{"name":"muteData","description":"Mute Data","type":[[["MutesData"]]]}],"returns":[[["Promise","<"],["null","|"],["boolean",">"]]],"meta":{"line":304,"file":"MuteManager.ts","path":"src/classes"}},{"name":"on","description":"Handles all the Events","inherits":"Base#on","inherited":true,"params":[{"name":"event","description":"Event Name","type":[[["String"]]]},{"name":"fn","description":"Callback","type":[[["function"]]]}],"returns":[[["Base"]]],"meta":{"line":15,"file":"Base.ts","path":"src/classes"}},{"name":"once","description":"Handles all the Events","inherits":"Base#once","inherited":true,"params":[{"name":"event","description":"Event Name","type":[[["String"]]]},{"name":"fn","description":"Callback","type":[[["function"]]]}],"returns":[[["EventEmitter"]]],"meta":{"line":30,"file":"Base.ts","path":"src/classes"}},{"name":"emit","description":"Emits any Event","inherits":"Base#emit","inherited":true,"params":[{"name":"event","description":"Event Name","type":[[["String"]]]},{"name":"fn","description":"Callback","type":[[["function"]]]}],"returns":[[["boolean"]]],"meta":{"line":45,"file":"Base.ts","path":"src/classes"}}],"meta":{"line":21,"file":"MuteManager.ts","path":"src/classes"}},{"name":"Systems","construct":{"name":"Systems","params":[{"name":"client","description":"Discord.JS Client","type":[[["Client"]]]},{"name":"options","description":"Module Options","type":[[["Options"]]]}]},"props":[{"name":"client","description":"Discord Client","type":[[["Client"]]],"meta":{"line":33,"file":"Systems.ts","path":"src/classes"}},{"name":"options","description":"Module Options","type":[[["Options"]]],"meta":{"line":39,"file":"Systems.ts","path":"src/classes"}},{"name":"utils","description":"Module Utils","type":[[["Utils"]]],"meta":{"line":45,"file":"Systems.ts","path":"src/classes"}},{"name":"logger","description":"Module Logger","type":[[["Logger"]]],"meta":{"line":51,"file":"Systems.ts","path":"src/classes"}}],"methods":[{"name":"antiJoin","description":"Method that controls Anti Join System","params":[{"name":"member","description":"Discord Member","type":[[["GuildMember"]]]}],"returns":[[["Promise","<"],["boolean",">"]]],"meta":{"line":58,"file":"Systems.ts","path":"src/classes"}},{"name":"antiLink","description":"Method that controls Anti Link System","params":[{"name":"message","description":"Discord Message","type":[[["Message"]]]}],"returns":[[["Promise","<"],["boolean",">"]]],"meta":{"line":93,"file":"Systems.ts","path":"src/classes"}},{"name":"ghostPing","description":"Method that controls Ghost Ping System","params":[{"name":"message","description":"Discord Message","type":[[["Message"]]]}],"returns":[[["Promise","<"],["boolean",">"]]],"meta":{"line":131,"file":"Systems.ts","path":"src/classes"}},{"name":"antiInvite","description":"Method that controls Anti invite System","params":[{"name":"invite","description":"Discord Invite","type":[[["Invite"]]]}],"returns":[[["Promise","<"],["boolean",">"]]],"meta":{"line":149,"file":"Systems.ts","path":"src/classes"}}],"meta":{"line":23,"file":"Systems.ts","path":"src/classes"}},{"name":"Utils","description":"Class that including some methods.","extends":[[["Base"]]],"construct":{"name":"Utils","params":[{"name":"client","description":"Discord.JS Client","type":[[["Client"]]]},{"name":"options","description":"Module Options","type":[[["Options"]]]}]},"props":[{"name":"client","description":"Discord Client","type":[[["Client"]]],"meta":{"line":41,"file":"Utils.ts","path":"src/classes"}},{"name":"options","description":"Module Options","type":[[["Options"]]],"meta":{"line":47,"file":"Utils.ts","path":"src/classes"}},{"name":"database","description":"Database","type":[[["DBManager"]]],"meta":{"line":53,"file":"Utils.ts","path":"src/classes"}},{"name":"logger","description":"Module Logger","type":[[["Logger"]]],"meta":{"line":59,"file":"Utils.ts","path":"src/classes"}}],"methods":[{"name":"getGuild","description":"Method that will return Guild Data","params":[{"name":"guild","description":"Discord Guild","type":[[["Guild"]]]}],"returns":[[["Promise","<"],["GuilData",">"]]],"meta":{"line":66,"file":"Utils.ts","path":"src/classes"}},{"name":"createGuild","description":"Method that created Guild Data","params":[{"name":"guild","description":"Discord Guild","type":[[["Guild"]]]}],"returns":[[["Promise","<"],["boolean",">"]]],"meta":{"line":87,"file":"Utils.ts","path":"src/classes"}},{"name":"setData","description":"Method that changes data in Storage","params":[{"name":"guild","description":"Discord Guild","type":[[["Guild"]]]},{"name":"newData","description":"New Guild Data","type":[[["GuildData"]]]}],"returns":[[["Promise","<"],["boolean",">"]]],"meta":{"line":121,"file":"Utils.ts","path":"src/classes"}},{"name":"logEmbed","description":"Method that created Log Embed","params":[{"name":"action","description":"Type of the Action","type":[[["ActionTypes"]]]},{"name":"member","description":"Discord Member","type":[[["GuildMember"]]]},{"name":"data","description":"Warn or Mute Data","type":[[["MutesData"]],[["WarnsData"]]]}],"returns":[[["Promise","<"],["GuildMember",">"]]],"meta":{"line":142,"file":"Utils.ts","path":"src/classes"}},{"name":"checkMutes","description":"Method that checks mutes when client is ready","returns":[[["Promise","<"],["boolean",">"]]],"meta":{"line":352,"file":"Utils.ts","path":"src/classes"}},{"name":"wait","description":"Method that create Timeout with Promise","params":[{"name":"ms","description":"Milliseconds","type":[[["number"]]]}],"returns":[[["Promise","<"],["unknown",">"]]],"meta":{"line":416,"file":"Utils.ts","path":"src/classes"}},{"name":"checkOptions","returns":[[["Promise","<"],["boolean",">"]]],"meta":{"line":426,"file":"Utils.ts","path":"src/classes"}},{"name":"checkImmunity","description":"Method that checks User Immunity.","params":[{"name":"target","description":"Discord Member or Invite","type":[[["GuildMember"]],[["Invite"]]]}],"returns":[[["Promise","<"],["boolean",">"]]],"meta":{"line":438,"file":"Utils.ts","path":"src/classes"}},{"name":"on","description":"Handles all the Events","inherits":"Base#on","inherited":true,"params":[{"name":"event","description":"Event Name","type":[[["String"]]]},{"name":"fn","description":"Callback","type":[[["function"]]]}],"returns":[[["Base"]]],"meta":{"line":15,"file":"Base.ts","path":"src/classes"}},{"name":"once","description":"Handles all the Events","inherits":"Base#once","inherited":true,"params":[{"name":"event","description":"Event Name","type":[[["String"]]]},{"name":"fn","description":"Callback","type":[[["function"]]]}],"returns":[[["EventEmitter"]]],"meta":{"line":30,"file":"Base.ts","path":"src/classes"}},{"name":"emit","description":"Emits any Event","inherits":"Base#emit","inherited":true,"params":[{"name":"event","description":"Event Name","type":[[["String"]]]},{"name":"fn","description":"Callback","type":[[["function"]]]}],"returns":[[["boolean"]]],"meta":{"line":45,"file":"Base.ts","path":"src/classes"}}],"meta":{"line":23,"file":"Utils.ts","path":"src/classes"}},{"name":"WarnManager","description":"Class that Handles/Creates/Removes Warns","extends":[[["Base"]]],"construct":{"name":"WarnManager","params":[{"name":"client","description":"Discord.JS Client","type":[[["Client"]]]},{"name":"options","description":"Module Options","type":[[["Options"]]]}]},"props":[{"name":"client","description":"Discord Client","type":[[["Client"]]],"meta":{"line":35,"file":"WarnManager.ts","path":"src/classes"}},{"name":"options","description":"Module Options","type":[[["Options"]]],"meta":{"line":41,"file":"WarnManager.ts","path":"src/classes"}},{"name":"mutes","description":"Mute Manager","type":[[["MuteManager"]]],"meta":{"line":47,"file":"WarnManager.ts","path":"src/classes"}},{"name":"utils","description":"Module Utils","type":[[["Utils"]]],"meta":{"line":53,"file":"WarnManager.ts","path":"src/classes"}},{"name":"logger","description":"Module Logger","type":[[["Logger"]]],"meta":{"line":59,"file":"WarnManager.ts","path":"src/classes"}}],"methods":[{"name":"getWarn","description":"Get last Member Warn","params":[{"name":"member","description":"Discord Member","type":[[["GuildMember"]]]}],"returns":[[["Promise","<"],["WarnsData","|"],["null",">"]]],"meta":{"line":66,"file":"WarnManager.ts","path":"src/classes"}},{"name":"create","description":"Method that creates Warn.","emits":["Moderation#event:warnAdd","Moderation#event:warnKick"],"params":[{"name":"message","description":"Message or Interaction","type":[[["Message"]],[["Interaction"]]]},{"name":"member","description":"Discord Member","type":[[["GuildMember"]]]},{"name":"reason","description":"Warn Reason","type":[[["string"]]]}],"returns":[[["Promise","<"],["WarnsData",">"]]],"meta":{"line":91,"file":"WarnManager.ts","path":"src/classes"}},{"name":"delete","description":"Method that removes last warn from member","emits":["Moderation#event:warnRemove"],"params":[{"name":"member","description":"Discord Member","type":[[["GuildMember"]]]}],"returns":[[["Promise","<"],["WarnsData",">"]]],"meta":{"line":141,"file":"WarnManager.ts","path":"src/classes"}},{"name":"all","description":"Method that returns all member warns","params":[{"name":"member","description":"Discord Member","type":[[["GuildMember"]]]}],"returns":[[["Promise","<"],["Array","<"],["WarnsData",">|"],["null",">"]]],"meta":{"line":179,"file":"WarnManager.ts","path":"src/classes"}},{"name":"_handle","description":"Method that handles Member Warns","params":[{"name":"message","description":"Message or Interaction","type":[[["Message"]],[["Interaction"]]]},{"name":"member","description":"Discord Member","type":[[["GuildMember"]]]},{"name":"data","description":"Guild Data","type":[[["GuildData"]]]},{"name":"warnData","description":"Warn Data","type":[[["WarnsData"]]]}],"async":true,"returns":[[["Promise","<"],["boolean",">"]]],"meta":{"line":201,"file":"WarnManager.ts","path":"src/classes"}},{"name":"on","description":"Handles all the Events","inherits":"Base#on","inherited":true,"params":[{"name":"event","description":"Event Name","type":[[["String"]]]},{"name":"fn","description":"Callback","type":[[["function"]]]}],"returns":[[["Base"]]],"meta":{"line":15,"file":"Base.ts","path":"src/classes"}},{"name":"once","description":"Handles all the Events","inherits":"Base#once","inherited":true,"params":[{"name":"event","description":"Event Name","type":[[["String"]]]},{"name":"fn","description":"Callback","type":[[["function"]]]}],"returns":[[["EventEmitter"]]],"meta":{"line":30,"file":"Base.ts","path":"src/classes"}},{"name":"emit","description":"Emits any Event","inherits":"Base#emit","inherited":true,"params":[{"name":"event","description":"Event Name","type":[[["String"]]]},{"name":"fn","description":"Callback","type":[[["function"]]]}],"returns":[[["boolean"]]],"meta":{"line":45,"file":"Base.ts","path":"src/classes"}}],"meta":{"line":17,"file":"WarnManager.ts","path":"src/classes"}}],"interfaces":[],"typedefs":[{"name":"Options","description":"Module Options","type":[[["Object"]]],"props":[{"name":"storageType","description":"Storage Type (JSON or SQLite, default JSON)","type":[[["string"]]]},{"name":"storagePath","description":"Storage Path (Only for JSON type)","type":[[["string"]]]},{"name":"locale","description":"Date Locale (default 'en-US')","type":[[["string"]]]},{"name":"ModuleSystems","description":"Module Systems","type":[[["ModuleSystems"]]]}],"meta":{"line":57,"file":"Base.ts","path":"src/classes"}},{"name":"ModuleSystems","description":"Module Options","type":[[["Object"]]],"props":[{"name":"autoRole","description":"Auto Role System","type":[[["boolean"]]]},{"name":"antiSpam","description":"Anti Spam System","type":[[["boolean"]]]},{"name":"antiInvite","description":"Anti Invite System","type":[[["boolean"]]]},{"name":"antiJoin","description":"Anti Join System","type":[[["boolean"]]]},{"name":"antiLink","description":"Anti Link System","type":[[["boolean"]]]},{"name":"blacklist","description":"Blacklist System","type":[[["boolean"]]]},{"name":"ghostPing","description":"Ghost Ping Detecting System","type":[[["boolean"]]]},{"name":"logSystem","description":"Log System","type":[[["boolean"]]]}],"meta":{"line":66,"file":"Base.ts","path":"src/classes"}},{"name":"MutesData","description":"Mute Data","type":[[["Object"]]],"props":[{"name":"id","description":"ID of the Mute","type":[[["number"]]]},{"name":"type","description":"Type of the Mute","type":[[["string"]]]},{"name":"guildID","description":"Guild ID","type":[[["string"]]]},{"name":"memberID","description":"Member ID","type":[[["string"]]]},{"name":"moderatorID","description":"Moderator ID","type":[[["string"]]]},{"name":"channelID","description":"Channel ID","type":[[["string"]]]},{"name":"time","description":"Mute Time","type":[[["number"]]]},{"name":"unmutedAt","description":"Time when Member will be Unmuted","type":[[["number"]]]}],"meta":{"line":79,"file":"Base.ts","path":"src/classes"}},{"name":"GuildData","description":"Guild Data","type":[[["Object"]]],"props":[{"name":"guildID","description":"Guild ID","type":[[["string"]]]},{"name":"muteRole","description":"Mute Role ID","type":[[["null"]],[["string"]]]},{"name":"autoRole","description":"Auto Role ID","type":[[["null"]],[["string"]]]},{"name":"cases","description":"Count of Cases","type":[[["null"]],[["number"]]]},{"name":"warns","description":"Guild Warns","type":[[["Array","<"],["WarnsData",">"]]]},{"name":"mutes","description":"Guild Mutes","type":[[["Array","<"],["MutesData",">"]]]},{"name":"ImmunityUsersData","description":"Users with Immunity","type":[[["Array","<"],["ImmunityUsersData",">"]]]}],"meta":{"line":92,"file":"Base.ts","path":"src/classes"}},{"name":"WarnsData","description":"Warn Data","type":[[["Object"]]],"props":[{"name":"id","description":"ID of the Warn","type":[[["number"]]]},{"name":"guildID","description":"Guild ID","type":[[["string"]]]},{"name":"memberID","description":"Member ID","type":[[["string"]]]},{"name":"moderatorID","description":"Moderator ID","type":[[["string"]]]},{"name":"channelID","description":"Channel ID","type":[[["string"]]]},{"name":"warns","description":"Warns Length","type":[[["number"]],[["null"]]]},{"name":"reason","description":"Warn Reason","type":[[["string"]]]}],"meta":{"line":104,"file":"Base.ts","path":"src/classes"}},{"name":"ImmunityUsersData","description":"Immunity Users Data","type":[[["Object"]]],"props":[{"name":"status","description":"Status of Immunity","type":[[["boolean"]]]},{"name":"memberID","description":"Member ID","type":[[["string"]]]}],"meta":{"line":116,"file":"Base.ts","path":"src/classes"}},{"name":"userMap","description":"Users Map","type":[[["Object"]]],"props":[{"name":"msgCount","description":"Count of Sent User Messages","type":[[["number"]]]},{"name":"lastMessage","description":"Last Message by User","type":[[["Message"]]]},{"name":"timer","description":"Timeout","type":[[["NodeJS","."],["Timeout"]]]}],"meta":{"line":123,"file":"Base.ts","path":"src/classes"}},{"name":"ActionTypes","description":"* Mute\n* TempMute\n* UnMute\n* Ban\n* Kick\n* Warn\n* UnWarn","type":[[["string"]]],"meta":{"line":131,"file":"Base.ts","path":"src/classes"}}],"externals":[]}
