{"version":3,"file":"constants.js","sourceRoot":"","sources":["../src/constants.ts"],"names":[],"mappings":";;;AAEa,QAAA,cAAc,GAAG;IAC5B,YAAY,EAAE,CAAC,QAA2B,EAAE,GAAQ,EAAE,IAAa,EAAE,EAAE;;QACrE,OAAA,YACE,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC;YACrB,CAAC,CAAC,QAAQ;iBACL,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,OAAO,CAAC,KAAK,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;iBAClD,IAAI,CAAC,MAAM,CAAC;YACjB,CAAC,CAAC,IAAI,QAAQ,GAClB,GAAG,IAAI,CAAC,CAAC,CAAC,QAAQ,IAAI,EAAE,CAAC,CAAC,CAAC,EAAE,aAC3B,OAAO,GAAG,KAAK,QAAQ;YACrB,CAAC,CAAC,IAAI,GAAG,GAAG;YACZ,CAAC,CAAC,OAAO,GAAG,KAAK,QAAQ;gBACzB,CAAC,CAAC,GAAG;gBACL,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC;oBACpB,CAAC,CAAC,SAAS,GAAG,CAAC,MAAM,GAAG;oBACxB,CAAC,CAAC,CAAA,MAAA,GAAG,aAAH,GAAG,uBAAH,GAAG,CAAE,WAAW,0CAAE,IAAI,KAAI,OAAO,GACvC,EAAE,CAAA;KAAA;IACJ,eAAe,EAAE,CAAC,QAAgB,EAAE,GAAQ,EAAE,IAAY,EAAE,EAAE,CAC5D,aAAa,QAAQ,UAAU,IAAI,eAAe,GAAG,GAAG;CAC3D,CAAC","sourcesContent":["export type MuteTypes = \"mute\" | \"tempmute\";\n\nexport const ERROR_MESSAGES = {\n  INVALID_TYPE: (expected: string | string[], got: any, name?: string) =>\n    `Expected ${\n      Array.isArray(expected)\n        ? expected\n            .map((e) => (typeof e === \"number\" ? e : `'${e}'`))\n            .join(\" or \")\n        : `'${expected}'`\n    }${name ? ` for ${name}` : \"\"}, but got ${\n      typeof got === \"string\"\n        ? `'${got}'`\n        : typeof got === \"number\"\n        ? got\n        : Array.isArray(got)\n        ? `Array<${got.length}>`\n        : got?.constructor?.name || typeof got\n    }`,\n  UNDEFINED_VALUE: (expected: string, got: any, name: string) =>\n    `Expected '${expected}' for '${name}', but got '${got}'`,\n};\n\nexport interface Events {\n  muteMember: [\n    {\n      id: number;\n      type: string;\n      guildID: string;\n      memberID: string;\n      moderatorID: string;\n      channelID: string;\n      reason: string;\n      time?: number;\n      unmutedAt?: number;\n    }\n  ];\n\n  unmuteMember: [\n    {\n      id: number;\n      type: string;\n      guildID: string;\n      memberID: string;\n      moderatorID: string;\n      channelID: string;\n      reason: string;\n      time?: number;\n      unmutedAt?: number;\n    }\n  ];\n\n  warnKick: [\n    {\n      guildID: string;\n      memberID: string;\n      moderatorID: string;\n      channelID: string;\n      reason: string;\n    }\n  ];\n\n  warnAdd: [\n    {\n      id: number;\n      guildID: string;\n      moderatorID: string;\n      memberID: string;\n      channelID: string;\n      reason: string;\n    }\n  ];\n\n  warnRemove: [\n    {\n      id: number;\n      guildID: string;\n      memberID: string;\n      moderatorID: string;\n      channelID: string;\n      reason: string;\n    }\n  ];\n}\n\nexport interface GuildData {\n  guildID: string;\n  muteRole: null | string;\n  warns: Array<WarnsData>;\n  mutes: Array<MutesData>;\n  immunityUsers: Array<ImmunityUsersData>;\n}\n\nexport interface ImmunityUsersData {\n  status: boolean;\n  memberID: string;\n}\n\nexport interface MutesData {\n  id: number;\n  type: string;\n  guildID: string;\n  memberID: string;\n  moderatorID: string;\n  channelID: string;\n  reason: string;\n  time?: number;\n  unmutedAt?: number;\n}\n\nexport interface WarnsData {\n  id: number;\n  guildID: string;\n  memberID: string;\n  moderatorID: string;\n  channelID: string;\n  reason: string;\n}\n\nexport interface Options {\n  storageType: \"json\" | \"sqlite\";\n  storagePath: string;\n}\n"]}