{"version":3,"file":"WarnManager.js","sourceRoot":"","sources":["../../../src/classes/WarnManager.ts"],"names":[],"mappings":"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","sourcesContent":["import { Client, GuildMember, Message } from \"discord.js\";\nimport { Base } from \"./Base\";\nimport { MuteManager } from \"./MuteManager\";\nimport { Utils } from \"./Utils\";\nimport { Logger } from \"./Logger\";\nimport { Options, WarnsData } from \"../constants\";\n\nexport declare interface WarnManager {\n  client: Client;\n  options: Options;\n\n  mutes: MuteManager;\n  utils: Utils;\n  logger: Logger;\n}\n\n/**\n * WarnManager Class\n *\n * @class\n * @classdesc Class that Handles/Creates/Removes Warns\n * @extends {Base}\n */\nexport class WarnManager extends Base {\n  /**\n   *\n   * @param {Client} client Discord.JS Client\n   * @param {Options} options Module Options\n   *\n   * @constructor\n   */\n  constructor(client: Client, options: Options) {\n    super();\n\n    /**\n     * Discord Client\n     * @type {Client}\n     */\n    this.client = client;\n\n    /**\n     * Module Options\n     * @type {Options}\n     */\n    this.options = options;\n\n    /**\n     * Mute Manager\n     * @type {MuteManager}\n     */\n    this.mutes = new MuteManager(this.client, this.options);\n\n    /**\n     * Module Utils\n     * @type {Utils}\n     */\n    this.utils = new Utils(this.client, this.options);\n\n    /**\n     * Module Logger\n     * @type {Logger}\n     */\n    this.logger = new Logger();\n  }\n\n  /**\n   * Get last Member Warn\n   *\n   * @param {GuildMember} member Discord Member\n   * @returns {Promise<WarnsData | null>}\n   */\n  getWarn(member: GuildMember): Promise<WarnsData | null> {\n    return new Promise(async (res, rej) => {\n      if (!member)\n        return this.logger.error(\n          'Specify \"GuildMember\" in WarnManager#getWarn!'\n        );\n\n      const data = await this.utils.getGuild(member.guild);\n      const warns = data.warns.length;\n      const lastWarn = data.warns[warns - 1];\n\n      if (!lastWarn || lastWarn === undefined) return res(null);\n\n      return res(lastWarn);\n    });\n  }\n\n  /**\n   * Method that creates Warn.\n   *\n   * @param {Message} message Discord Message\n   * @param {GuildMember} member Discord Member\n   * @param {string} reason Warn Reason\n   *\n   * @fires Moderation#warnAdd\n   * @fires Moderation#warnKick\n   * @returns {Promise<WarnsData>}\n   */\n  create(\n    message: Message,\n    member: GuildMember,\n    reason?: string\n  ): Promise<WarnsData> {\n    return new Promise(async (res, rej) => {\n      if (!message)\n        return this.logger.error('Specify \"Message\" in WarnManager#create!');\n      if (!member)\n        return this.logger.error(\n          'Specify \"GuildMember\" in WarnManager#create!'\n        );\n      if (!reason) reason = \"No reason provided\";\n\n      const data = await this.utils.getGuild(member.guild);\n      const warnData: WarnsData = {\n        id: data.warns.length + 1,\n        guildID: member.guild.id,\n        memberID: member.id,\n        moderatorID: message.author.id,\n        channelID: message.channel.id,\n        reason: reason,\n      };\n\n      data.warns.push(warnData);\n\n      await this.utils.setData(member.guild, data);\n\n      if (data.warns.length === 3) {\n        await this.mutes.create(\n          \"tempmute\",\n          message,\n          member,\n          \"User reached 3 warns | AutoMute.\",\n          3600000\n        );\n\n        this.emit(\"warnAdd\", warnData);\n\n        return res(warnData);\n      } else if (data.warns.length === 6) {\n        await member.kick(\"User reached 6 warns | AutoKick.\").catch((err) => {\n          return this.logger.error(err);\n        });\n\n        data.warns.filter((w: WarnsData) => w.memberID !== member.id);\n\n        await this.utils.setData(member.guild, data);\n        await this.emit(\"warnKick\", warnData);\n\n        return res(warnData);\n      }\n    });\n  }\n\n  /**\n   * Method that removes last warn from member\n   *\n   * @param {GuildMember} member Discord Member\n   *\n   * @fires Moderation#warnRemove\n   * @returns {Promise<WarnsData>}\n   */\n  delete(member: GuildMember): Promise<WarnsData> {\n    return new Promise(async (res, rej) => {\n      if (!member)\n        return this.logger.error(\n          'Specify \"GuildMember\" in WarnManager#delete!'\n        );\n\n      const data = await this.utils.getGuild(member.guild);\n\n      const lastWarn = await this.getWarn(member);\n      if (!lastWarn)\n        return this.logger.error(\"No Warn Data founded in Storage!\");\n\n      const warnData: WarnsData = {\n        id: lastWarn.id,\n        guildID: member.guild.id,\n        memberID: member.id,\n        moderatorID: lastWarn.moderatorID,\n        channelID: lastWarn.channelID,\n        reason: lastWarn.reason,\n      };\n\n      this.emit(\"warnRemove\", warnData);\n\n      data.warns.filter((w: WarnsData) => w.id !== lastWarn.id);\n      await this.utils.setData(member.guild, data);\n\n      return res(warnData);\n    });\n  }\n\n  /**\n   * Method that returns all member warns\n   *\n   * @param {GuildMember} member Discord Member\n   * @returns {Promise<WarnsData[] | null>}\n   */\n  all(member: GuildMember): Promise<WarnsData[] | null> {\n    return new Promise(async (res, rej) => {\n      if (!member)\n        return this.logger.error('Specify \"GuildMember\" in WarnManager#all!');\n\n      const data = await this.utils.getGuild(member.guild);\n      const warns = data.warns;\n\n      if (!warns || warns.length) return res(null);\n      else return res(warns);\n    });\n  }\n}\n"]}